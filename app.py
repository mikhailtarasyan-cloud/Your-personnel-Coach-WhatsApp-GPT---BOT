from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
import openai
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

app = Flask(__name__)

# –ë–µ—Ä—ë–º –∫–ª—é—á–∏ –∏–∑ Environment Variables
# openai.api_key –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏

# –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
@app.route("/")
def home():
    api_key = os.getenv("OPENAI_API_KEY")
    if api_key and api_key != "your_openai_api_key_here":
        return f"""
        <h1>ü§ñ WhatsApp GPT Bot</h1>
        <p>‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
        <p>‚úÖ OpenAI API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω: {api_key[:10]}...</p>
        <p>üì± WhatsApp endpoint: <a href="/whatsapp">/whatsapp</a></p>
        <p>üß™ –¢–µ—Å—Ç: curl -X POST /whatsapp -d "Body=–ü—Ä–∏–≤–µ—Ç"</p>
        """
    else:
        return f"""
        <h1>ü§ñ WhatsApp GPT Bot</h1>
        <p>‚ùå OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!</p>
        <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env</p>
        """

@app.route("/whatsapp", methods=["POST"])
def whatsapp_reply():
    try:
        incoming_msg = request.values.get("Body", "").strip()
        resp = MessagingResponse()
        msg = resp.message()

        if incoming_msg:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
            api_key = os.getenv("OPENAI_API_KEY")
            if not api_key:
                return "Error: OPENAI_API_KEY not set", 500
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á –Ω–µ –ø—É—Å—Ç–æ–π
            if api_key == "your_openai_api_key_here":
                return "Error: Please set your actual OpenAI API key in .env file", 500
            
            print(f"API Key loaded: {api_key[:10]}...")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            
            client = openai.OpenAI(api_key=api_key)
            response = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[{"role": "user", "content": incoming_msg}]
            )
            reply = response.choices[0].message.content
            msg.body(reply)
        return str(resp)
    except Exception as e:
        print(f"Error in whatsapp_reply: {str(e)}")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        return f"Error: {str(e)}", 500

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    api_key = os.getenv("OPENAI_API_KEY")
    print("=" * 50)
    print("üöÄ –ó–∞–ø—É—Å–∫ WhatsApp GPT Bot")
    print("=" * 50)
    
    if api_key and api_key != "your_openai_api_key_here":
        print(f"‚úÖ OpenAI API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω: {api_key[:10]}...")
    else:
        print("‚ùå OpenAI API –∫–ª—é—á –ù–ï –∑–∞–≥—Ä—É–∂–µ–Ω!")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
    
    print(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç—É 5005")
    print(f"üì± WhatsApp endpoint: http://localhost:5005/whatsapp")
    print(f"üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:5005/")
    print("=" * 50)
    
    app.run(host="0.0.0.0", port=5005, debug=True)
